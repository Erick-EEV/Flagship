[{"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/BigSidebar.jsx":"1","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/index.js":"2","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/LoginPage.jsx":"3","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/LoginForm.jsx":"4","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/SmallSidebar.jsx":"5","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/reportWebVitals.js":"6","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/App.js":"7","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/SignUpForm.jsx":"8","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Logo.jsx":"9","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/Recoil.jsx":"10","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Chatroom.jsx":"11","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/Search.jsx":"12","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Home.jsx":"13"},{"size":6934,"mtime":1611777904955,"results":"14","hashOfConfig":"15"},{"size":534,"mtime":1610990164278,"results":"16","hashOfConfig":"15"},{"size":302,"mtime":1611198194490,"results":"17","hashOfConfig":"15"},{"size":2979,"mtime":1611593616385,"results":"18","hashOfConfig":"15"},{"size":5436,"mtime":1611777904956,"results":"19","hashOfConfig":"15"},{"size":362,"mtime":1610402583497,"results":"20","hashOfConfig":"15"},{"size":2271,"mtime":1611604412019,"results":"21","hashOfConfig":"15"},{"size":3631,"mtime":1611778640375,"results":"22","hashOfConfig":"15"},{"size":298,"mtime":1611107354627,"results":"23","hashOfConfig":"15"},{"size":267,"mtime":1611107354625,"results":"24","hashOfConfig":"15"},{"size":3978,"mtime":1611777904955,"results":"25","hashOfConfig":"15"},{"size":1456,"mtime":1611437020904,"results":"26","hashOfConfig":"15"},{"size":2732,"mtime":1611778640375,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"7n943",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/BigSidebar.jsx",["63","64"],"import React, { Component } from \"react\";\nimport Search from \"../presentational/Search\";\nimport Add from \"../images/add-circle-outline (1).svg\";\n\nexport default class BigSidebar extends Component {\n  state = {\n    searchResult: \"\",\n    result: {},\n    chatroomTitle: \"\",\n  };\n\n  componentDidUpdate(prevProps) {\n    // console.log(prevProps, this.props);\n    if (prevProps.serverId !== this.props.serverId) {\n      let url = `http://localhost:3000/servers/${this.props.serverId}`;\n\n      fetch(url)\n        .then((resp) => resp.json())\n        .then((server) => {\n          this.props.loadSelectChatroom(server.chatrooms);\n          // console.log(\"fetch\");\n        });\n    }\n  }\n\n  handleOnChange = (event) => {\n    event.preventDefault();\n    this.setState({ searchResult: event.target.value });\n    // console.log(event.target.value);\n  };\n\n  search = (event) => {\n    event.preventDefault();\n    let searchResult = this.state.searchResult;\n    let url = \"http://localhost:3000/search\";\n    let reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ name: searchResult }),\n    };\n\n    fetch(url, reqObj)\n      .then((resp) => resp.json())\n      .then((server) => this.setState({ result: server }));\n  };\n\n  chatroomTitle = (event) => {\n    this.setState({\n      chatroomTitle: event.target.value,\n    });\n    // console.log(event.target.value);\n  };\n\n  createChatroom = (event) => {\n    event.preventDefault();\n    let url = \"http://localhost:3000/chatrooms\";\n    let newChatroom = this.state.chatroomTitle;\n    let serverId = this.props.serverId;\n\n    let reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ title: newChatroom, server_id: serverId }),\n    };\n\n    fetch(url, reqObj)\n      .then((resp) => resp.json())\n      .then((newChatroom) => this.props.updateChat(newChatroom));\n  };\n\n  deleteChat = (event) => {\n    event.preventDefault();\n    let chatroomId = event.target.value;\n    let url = `http://localhost:3000/chatrooms/${chatroomId}`;\n\n    let reqObj = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    fetch(url, reqObj);\n    console.log(\"deleted\");\n  };\n\n  render() {\n    return (\n      <div className=\"w-64 h-screen mt-8 bg-gray-800 sm:mt-0\">\n        <div className=\"flex items-center justify-center mt-10\">\n          {/* BidSidebar properties */}\n          <div class=\"pt-2 relative mx-auto text-gray-600 searchbar\">\n            <form onSubmit={(event) => this.search(event)}>\n              <div>\n                <input\n                  onChange={(event) => this.handleOnChange(event)}\n                  value={this.state.searchResult}\n                  class=\"border-2 border-gray-300 bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none\"\n                  type=\"search\"\n                  name=\"search\"\n                  placeholder=\"Search Servers\"\n                />\n              </div>\n              <div>\n                <button type=\"submit\" class=\"absolute right-0 top-0 mt-5 mr-4\">\n                  <svg\n                    class=\"text-gray-600 h-4 w-4 fill-current\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    version=\"1.1\"\n                    id=\"Capa_1\"\n                    x=\"0px\"\n                    y=\"0px\"\n                    viewBox=\"0 0 56.966 56.966\"\n                    width=\"512px\"\n                    height=\"512px\"\n                  >\n                    <path d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\" />\n                  </svg>\n                </button>\n              </div>\n            </form>\n          </div>\n          {/* Search box */}\n          <div className=\"bg-white\">\n            {/* {this.state.result?.name} */}\n            <Search\n              result={this.state.result}\n              addServerToState={this.props.addServerToState}\n            />\n          </div>\n          {/* Search Results */}\n          <div className=\"chats-div\">\n            <h1 className=\"text-xl text-white bg-blue-800\">Chatrooms</h1>\n          </div>\n          {/* Chatroom Div Above and Chatroom Titles Below */}\n        </div>\n        <span className=\"mx-4 font-medium\">\n          {/* {console.log(this.props.selectedChatrooms)} */}\n          {this.props.selectedChatrooms?.map((chat) => (\n            <nav className=\"mt-10\">\n              <a\n                className=\"flex items-center px-8 py-2 text-gray-100 bg-gray-700 border-r-4 border-gray-100\"\n                href=\"#\"\n              >\n                <span className=\"mx-4 font-medium font-semibold\">\n                  <div className=\"chatroom-title\">\n                    <ul>\n                      <li\n                        onClick={(event) => this.props.selectChatroom(event)}\n                        value={chat.id}\n                      >\n                        {chat.title}\n                      </li>\n\n                      <div className=\"delete-chatroom\">\n                        {this.props.currentUser.members.find(\n                          (relationship) =>\n                            relationship.server_id === this.props.serverId\n                        ).admin ? (\n                          <li\n                            onClick={(event) => this.deleteChat(event)}\n                            value={chat.id}\n                          >\n                            Delete\n                          </li>\n                        ) : null}\n                      </div>\n                    </ul>\n                  </div>\n                </span>\n              </a>\n            </nav>\n          ))}\n        </span>\n        {/* Create Chatroom Button */}\n        <div className=\"create-chatroom\">\n          <form>\n            <div>\n              <input\n                onChange={(event) => this.chatroomTitle(event)}\n                value={this.state.chatroomTitle}\n                class=\"border-2 border-gray-300 bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none\"\n                type=\"chatroom\"\n                name=\"chatroom\"\n                placeholder=\"New Chatroom\"\n              />\n              <div className=\"mb-50 create-chatroom\">\n                <button onClick={(event) => this.createChatroom(event)}>\n                  <img src={Add} className=\"w-10 h-10 mx-auto mb-3\" />\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n",["65","66"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/index.js",[],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/LoginPage.jsx",[],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/LoginForm.jsx",["67","68","69","70","71"],"import React, { useState } from \"react\";\nimport { FaBeer } from \"react-icons/fa\";\nimport Image from \"../images/boatlogo.png\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRecoilState, atom } from \"recoil\";\nimport { usernameState } from \"../Recoil\";\n\nexport default function LoginForm(props) {\n  const [current_username, setUsername] = useRecoilState(usernameState);\n  const history = useHistory();\n  const onChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const logIn = (event) => {\n    event.preventDefault();\n    let url = \"http://localhost:3000/login\";\n    let reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ username: current_username }),\n    };\n\n    fetch(url, reqObj)\n      .then((resp) => resp.json())\n      .then((user) => {\n        localStorage.setItem(\"userId\", user.id);\n        props.callBack(user.id);\n      });\n  };\n\n  return (\n    <div>\n      <div class=\"max-w-lg max-w-xs bg-blue-900 shadow-2xl rounded-lg mx-auto text-center py-12 mt-4 rounded-xl\">\n        <img src={Image} width=\"200\" height=\"100\" className=\"login-logo\" />\n        <div className=\"welcome-flagship\">\n          <h1 class=\"text-gray-200 text-center font-extrabold -mt-3 text-3xl\">\n            Welcome to Flagship\n          </h1>\n        </div>\n        <div class=\"container py-5 max-w-md mx-auto\">\n          <form method=\"\" action=\"\" onSubmit={(event) => logIn(event)}>\n            <div class=\"mb-4\">\n              <input\n                placeholder=\"Username\"\n                class=\"shadow appearance-none  rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"username\"\n                type=\"text\"\n                value={current_username}\n                onChange={onChange}\n              />\n            </div>\n            <div class=\"mb-6\">\n              <input\n                placeholder=\"Password\"\n                class=\"shadow appearance-none  rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                value={null}\n                onChange={null}\n              />\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <button\n                class=\"bg-blue-700 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                type=\"submit\"\n              >\n                Sign In\n              </button>\n              <a\n                class=\"inline-block align-baseline font-bold text-sm text-gray-400 \"\n                href=\"/signUp\"\n              >\n                Register\n              </a>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/SmallSidebar.jsx",["72","73","74","75"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/reportWebVitals.js",[],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/App.js",["76","77","78","79","80"],"import { React, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from \"recoil\";\n\nimport LoginPage from \"./container/LoginPage\";\nimport SmallSidebar from \"./container/SmallSidebar\";\nimport SignUpForm from \"./presentational/SignUpForm\";\nimport Home from \"./container/Home\";\n\nexport default function App() {\n  //Returns \"No Server With That Name Found\" if not found\n  // Add Request to be in Server\n  //Admin will get notification to add user if yes Create member relationship if no null\n  //Admin can Delete a user's member relationship \"Remove User\"\n\n  //  Update, PATCH request\n  // Delete DELETE request\n  // Messages Only be able to delete my messages unless admin, Admin can delete all messages\n\n  const [currentuserid, setUser] = useState(\"false\");\n\n  function callBack(user) {\n    setUser(user);\n  }\n\n  useEffect(() => {\n    setUser(localStorage.getItem(\"userId\"));\n  }, [currentuserid]);\n\n  const loadLogOut = () => {\n    localStorage.setItem(\"userId\", \"false\")\n    setUser(\"false\")\n  }\n\n  return (\n    <div class=\"bg-gray-600\">\n      {/* {console.log(currentuser)} */}\n      <div className=\"App\">\n        <RecoilRoot>\n          <Switch>\n            <Route exact path=\"/\">\n              {currentuserid !== \"false\" ? (\n                <Redirect to=\"/loggedIn\" />\n              ) : (\n                <LoginPage callBack={callBack} />\n              )}\n            </Route>\n            {/* <Route exact path=\"/loggedIn\" >  { currentuserid === \"false\" ? <Redirect to=\"/\" /> : <SmallSidebar currentuserid={currentuserid}/>}  </Route> */}\n            <Route exact path=\"/loggedIn\">\n              {currentuserid === \"false\" ? <Redirect to=\"/\" /> : <Home currentuserid={currentuserid} loadLogOut={loadLogOut}/> }\n            </Route>\n            <Route exact path=\"/signUp\">\n              {currentuserid !== \"false\" ? (\n                <Redirect to=\"/loggedIn\" />\n              ) : (\n                <SignUpForm callBack={callBack} />\n              )}\n            </Route>\n            {/* <Route exact path=\"/signUp\" component={SignUpForm}></Route> */}\n          </Switch>\n        </RecoilRoot>\n      </div>\n    </div>\n  );\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/SignUpForm.jsx",["81","82","83","84","85"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { atom, useRecoilState } from 'recoil'\n\n\n\nexport default class SignUpForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    image: \"\",\n    current_user: {}\n  };\n\n  \n  \n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    let url = \"http://localhost:3000/signUp\";\n    let reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n        image: this.state.image\n      }),\n    };\n    fetch(url, reqObj)\n    .then(response => response.json())\n    .then(user => this.props.callBack(user))\n  };\n\n  inputs = (e) => {\n    this.setState({ ...this.state, [e.target.name]: e.target.value });\n    console.log(e.target.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <div class=\"bg-grey-lighter min-h-screen flex flex-col\">\n          <div class=\"container max-w-sm mx-auto flex-1 flex flex-col items-center justify-center px-2\">\n            <div class=\"bg-white px-6 py-8 rounded shadow-md text-black w-full\">\n              <h1 class=\"mb-8 text-3xl text-center\">Sign up</h1>\n              <form onSubmit={(event) => this.handleOnSubmit(event)}>\n                <input\n                  type=\"text\"\n                  class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                  name=\"username\"\n                  value={this.state.username}\n                  placeholder=\"Full Name\"\n                  onChange={(event) => this.inputs(event)}\n                />\n                <input\n                  type=\"password\"\n                  class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                  name=\"password\"\n                  value={this.state.password}\n                  placeholder=\"Password\"\n                  onChange={(event) => this.inputs(event)}\n                />\n                <input\n                  type=\"profilepic\"\n                  class=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                  name=\"image\"\n                  value={this.state.image}\n                  placeholder=\"Profile Pic\"\n                  onChange={(event) => this.inputs(event)}\n                />\n                {/* <Link to=\"/loggedIn\"> */}\n                  <button\n                    type=\"submit\"\n                    \n                    class=\"w-full text-center py-3 rounded bg-green text-black hover:bg-green-dark focus:outline-none my-1\"\n                  >\n                    Create Account\n                  </button>\n                {/* </Link> */}\n              </form>\n              <div class=\"text-center text-sm text-grey-dark mt-4\">\n                By signing up, you agree to the\n                <a\n                  class=\"no-underline border-b border-grey-dark text-grey-dark\"\n                  href=\"#\"\n                >\n                  Terms of Service\n                </a>{\" \"}\n                and\n                <a\n                  class=\"no-underline border-b border-grey-dark text-grey-dark\"\n                  href=\"#\"\n                >\n                  Privacy Policy\n                </a>\n              </div>\n            </div>\n\n            <div class=\"text-grey-dark mt-6\">\n              Already have an account?\n              <a class=\"no-underline border-b border-blue text-blue\" href=\"/\">\n                Log in\n              </a>\n              .\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Logo.jsx",["86"],"import React, { Component } from 'react'\nimport Image from '../images/boatlogo.png'\n\n\nexport default class Logo extends Component {\n    render() {\n        return (\n            <div class=\"right-20\">\n                <img className=\"logo-init-page\" src={Image}/>\n            </div>\n        )\n    }\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/Recoil.jsx",["87","88","89","90"],"import {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n  } from 'recoil';\n\n\n  export const usernameState = atom({\n    key: \"current_username\",\n    default: \"\"\n  })\n\n  export const userS = atom({\n    key: \"userS\",\n    default: []\n  })","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Chatroom.jsx",["91","92"],"import React, { Component } from \"react\";\nimport Logo from \"./Logo\";\n\nexport default class Chatroom extends Component {\n  state = {\n    newMessage: \"\",\n    messageObj: {},\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedChatroomId !== this.props.selectedChatroomId) {\n      let url = `http://localhost:3000/chatrooms/${this.props.selectedChatroomId}`;\n\n      fetch(url)\n        .then((resp) => resp.json())\n        .then((chatroom) => {\n          this.props.setMessages(chatroom.messages);\n        });\n    }\n  }\n  handleOnChange(event) {\n    event.preventDefault();\n    this.setState({ newMessage: event.target.value });\n    // console.log(event.target.value);\n  }\n\n  createMessage(event) {\n    event.preventDefault();\n    let url = \"http://localhost:3000/messages\";\n    let newMessage = this.state.newMessage;\n    let userId = localStorage.getItem(\"userId\");\n    let username = localStorage.getItem(\"username\");\n    let chatroomId = this.props.selectedChatroomId;\n\n    let reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        text: newMessage,\n        chatroom_id: chatroomId,\n        owner: username,\n      }),\n    };\n\n    fetch(url, reqObj)\n      .then((resp) => resp.json())\n      .then((message) => this.props.updateMessages(message));\n  }\n\n  deleteMessage = (event) => {\n    event.preventDefault()\n    let messageId = event.target.value;\n    let url = `http://localhost:3000/messages/${messageId}`;\n\n    let reqObj = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      }\n    };\n\n    fetch(url, reqObj);\n    this.props.deletechatMessage(messageId)\n    // console.log(event.target.value);\n    console.log(\"deleted\");\n  }\n  render() {\n    return (\n  <div class=\"ml-10 chatroom-div\">\n          {/* Message */}\n      <div className=\" messages-div\">\n            {this.props.messages?.map((message) => (\n        <div>\n                <div>\n                  <h6 className=\"font-bold text-blue-400\">{message.owner ? message.owner : null}</h6>\n                </div>\n                <h2 className=\"font-bold text-white\">{message.text ? message.text : null}</h2>\n                <div className=\"delete-message\">\n                        {this.props.currentUser.members.find(\n                          (relationship) =>\n                            relationship.server_id === this.props.serverId\n                        ).admin ? (\n                          <ul>\n                          <li\n                          classname=\"font-bold\"\n                            onClick={(event) => this.deleteMessage(event)}\n                            style={{textDecoration: \"none\"}}\n                            value={message.id}\n                          >\n                            X\n                          </li>\n                          </ul>\n                        ) : null}\n                      </div>\n              </div>\n            ))}\n     \n          {/* New Message form */}\n          {this.props.selectedChatroomId != 0 ? \n          <div>\n            <form onSubmit={(event) => this.createMessage(event)}>\n              <div>\n                <input\n                  onChange={(event) => this.handleOnChange(event)}\n                  placeholder=\"Enter Message\"\n                  id=\"message\"\n                  type=\"message\"\n                ></input>\n              </div>\n              <div className=\"submit-button\">\n                <button\n                  type=\"submit\"\n                  placeholder=\"Submit\"\n                  class=\"bg-blue-700 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                >\n                  Submit\n                </button>\n              </div>\n            </form>\n            </div> : null} \n      </div>\n  </div>\n      \n    );\n  }\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/Search.jsx",["93"],"import React, { Component } from 'react'\nimport Add from '../images/add-circle-outline (1).svg'\n\nexport default class Search extends Component {\n\n    addServer = (event) => {\n        let url = \"http://localhost:3000/addserver\"\n        let serverId = this.props.result.id\n        let userId = localStorage.getItem(\"userId\")\n\n        let reqObj = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify({ server_id: serverId, user_id: userId, admin: false }),\n          };\n\n          fetch(url, reqObj)\n          .then(resp => resp.json())\n          .then(memberRelationship => this.props.addServerToState(memberRelationship))\n        //   I tried to use this addServerToState to get the page to refresh when added but it doesnt seem to work \n          \n    }\n\n    \n    render() {\n        // console.log(this.props.result.name);\n        return (\n            <div>\n                <div>\n                {/* <input value={this.props.result.name}/> */}\n                <h1 class=\"text-xl text-white bg-blue-800\">{this.props.result.name}</h1>\n                </div>\n                <div className=\"bg-blue-800 add-button\">\n                <button onClick={(event) => this.addServer(event)} ><img src={Add} className=\"w-10 h-10 mx-auto mb-3 rounded-full\"/></button>\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Home.jsx",["94"],{"ruleId":"95","severity":1,"message":"96","line":148,"column":15,"nodeType":"97","endLine":151,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":196,"column":19,"nodeType":"97","endLine":196,"endColumn":71},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"109","line":5,"column":26,"nodeType":"106","messageId":"107","endLine":5,"endColumn":30},{"ruleId":"104","severity":1,"message":"110","line":10,"column":9,"nodeType":"106","messageId":"107","endLine":10,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":39,"column":9,"nodeType":"97","endLine":39,"endColumn":76},{"ruleId":"98","severity":1,"message":"99","line":113,"column":17,"nodeType":"97","endLine":113,"endColumn":80},{"ruleId":"95","severity":1,"message":"96","line":118,"column":15,"nodeType":"97","endLine":118,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":119,"column":17,"nodeType":"97","endLine":122,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":167,"column":15,"nodeType":"97","endLine":167,"endColumn":68},{"ruleId":"104","severity":1,"message":"109","line":6,"column":3,"nodeType":"106","messageId":"107","endLine":6,"endColumn":7},{"ruleId":"104","severity":1,"message":"111","line":7,"column":3,"nodeType":"106","messageId":"107","endLine":7,"endColumn":11},{"ruleId":"104","severity":1,"message":"112","line":8,"column":3,"nodeType":"106","messageId":"107","endLine":8,"endColumn":17},{"ruleId":"104","severity":1,"message":"113","line":9,"column":3,"nodeType":"106","messageId":"107","endLine":9,"endColumn":17},{"ruleId":"104","severity":1,"message":"114","line":13,"column":8,"nodeType":"106","messageId":"107","endLine":13,"endColumn":20},{"ruleId":"104","severity":1,"message":"115","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"112","line":3,"column":16,"nodeType":"106","messageId":"107","endLine":3,"endColumn":30},{"ruleId":"95","severity":1,"message":"96","line":91,"column":17,"nodeType":"97","endLine":94,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":98,"column":17,"nodeType":"97","endLine":101,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":9,"column":17,"nodeType":"97","endLine":9,"endColumn":62},{"ruleId":"104","severity":1,"message":"116","line":2,"column":5,"nodeType":"106","messageId":"107","endLine":2,"endColumn":15},{"ruleId":"104","severity":1,"message":"111","line":4,"column":5,"nodeType":"106","messageId":"107","endLine":4,"endColumn":13},{"ruleId":"104","severity":1,"message":"112","line":5,"column":5,"nodeType":"106","messageId":"107","endLine":5,"endColumn":19},{"ruleId":"104","severity":1,"message":"113","line":6,"column":5,"nodeType":"106","messageId":"107","endLine":6,"endColumn":19},{"ruleId":"104","severity":1,"message":"117","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":104,"column":42,"nodeType":"120","messageId":"121","endLine":104,"endColumn":44},{"ruleId":"98","severity":1,"message":"99","line":37,"column":69,"nodeType":"97","endLine":37,"endColumn":133},{"ruleId":"118","severity":1,"message":"119","line":82,"column":66,"nodeType":"120","messageId":"121","endLine":82,"endColumn":68},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FaBeer' is defined but never used.","'atom' is defined but never used.","'history' is assigned a value but never used.","'selector' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilValue' is defined but never used.","'SmallSidebar' is defined but never used.","'Link' is defined but never used.","'RecoilRoot' is defined but never used.","'Logo' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]