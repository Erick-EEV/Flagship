[{"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/BigSidebar.jsx":"1","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/index.js":"2","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/LoginPage.jsx":"3","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/LoginForm.jsx":"4","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/SmallSidebar.jsx":"5","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/reportWebVitals.js":"6","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/App.js":"7","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/SignUpForm.jsx":"8","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Logo.jsx":"9","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/Recoil.jsx":"10","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Chatroom.jsx":"11","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/Search.jsx":"12","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Home.jsx":"13"},{"size":6934,"mtime":1612291117819,"results":"14","hashOfConfig":"15"},{"size":534,"mtime":1610990164278,"results":"16","hashOfConfig":"15"},{"size":264,"mtime":1612291096392,"results":"17","hashOfConfig":"15"},{"size":2979,"mtime":1612291099261,"results":"18","hashOfConfig":"15"},{"size":5671,"mtime":1612291110878,"results":"19","hashOfConfig":"15"},{"size":362,"mtime":1610402583497,"results":"20","hashOfConfig":"15"},{"size":2342,"mtime":1612291093974,"results":"21","hashOfConfig":"15"},{"size":3606,"mtime":1612733893058,"results":"22","hashOfConfig":"15"},{"size":298,"mtime":1611107354627,"results":"23","hashOfConfig":"15"},{"size":267,"mtime":1611107354625,"results":"24","hashOfConfig":"15"},{"size":3998,"mtime":1611862602023,"results":"25","hashOfConfig":"15"},{"size":1456,"mtime":1611437020904,"results":"26","hashOfConfig":"15"},{"size":3041,"mtime":1612291107670,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7n943",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/BigSidebar.jsx",["61","62"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/index.js",[],["63","64"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/LoginPage.jsx",[],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/LoginForm.jsx",["65","66","67","68","69"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/SmallSidebar.jsx",["70","71","72","73"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/reportWebVitals.js",[],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/App.js",["74","75","76","77","78"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/SignUpForm.jsx",["79","80","81","82","83"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Logo.jsx",["84"],"import React, { Component } from 'react'\nimport Image from '../images/boatlogo.png'\n\n\nexport default class Logo extends Component {\n    render() {\n        return (\n            <div class=\"right-20\">\n                <img className=\"logo-init-page\" src={Image}/>\n            </div>\n        )\n    }\n}\n",["85","86"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/Recoil.jsx",["87","88","89","90"],"import {\n    RecoilRoot,\n    atom,\n    selector,\n    useRecoilState,\n    useRecoilValue,\n  } from 'recoil';\n\n\n  export const usernameState = atom({\n    key: \"current_username\",\n    default: \"\"\n  })\n\n  export const userS = atom({\n    key: \"userS\",\n    default: []\n  })",["91","92"],"/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Chatroom.jsx",["93","94"],"import React, { Component } from \"react\";\nimport Logo from \"./Logo\";\n\nexport default class Chatroom extends Component {\n  state = {\n    newMessage: \"\",\n    messageObj: {},\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedChatroomId !== this.props.selectedChatroomId) {\n      let url = `http://localhost:3000/chatrooms/${this.props.selectedChatroomId}`;\n\n      fetch(url)\n        .then((resp) => resp.json())\n        .then((chatroom) => {\n          this.props.setMessages(chatroom.messages);\n        });\n    }\n  }\n  handleOnChange(event) {\n    event.preventDefault();\n    this.setState({ newMessage: event.target.value });\n    // console.log(event.target.value);\n  }\n\n  createMessage(event) {\n    event.preventDefault();\n    let url = \"http://localhost:3000/messages\";\n    let newMessage = this.state.newMessage;\n    let userId = localStorage.getItem(\"userId\");\n    let username = localStorage.getItem(\"username\");\n    let chatroomId = this.props.selectedChatroomId;\n\n    let reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        text: newMessage,\n        chatroom_id: chatroomId,\n        owner: username,\n      }),\n    };\n\n    fetch(url, reqObj)\n      .then((resp) => resp.json())\n      .then((message) => this.props.updateMessages(message));\n  }\n\n  deleteMessage = (event) => {\n    event.preventDefault()\n    let messageId = event.target.value;\n    let url = `http://localhost:3000/messages/${messageId}`;\n\n    let reqObj = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      }\n    };\n\n    fetch(url, reqObj);\n    this.props.deletechatMessage(messageId)\n    // console.log(event.target.value);\n    console.log(\"deleted\");\n  }\n  render() {\n    return (\n  <div class=\"ml-10 chatroom-div\">\n          {/* Message */}\n      <div className=\" messages-div\">\n            {this.props.messages?.map((message) => (\n        <div>\n                <div className=\"w-full \">\n                  <h6 className=\"font-bold text-blue-400\">{message.owner ? message.owner : null}</h6>\n                <h2 className=\"font-bold text-white\">{message.text ? message.text : null}</h2>\n                </div>\n                <div className=\"delete-message\">\n                        {this.props.currentUser.members.find(\n                          (relationship) =>\n                            relationship.server_id === this.props.serverId\n                        ).admin ? (\n                          <ul>\n                          <li\n                          classname=\"font-bold\"\n                            onClick={(event) => this.deleteMessage(event)}\n                            style={{textDecoration: \"none\"}}\n                            value={message.id}\n                          >\n                            X\n                          </li>\n                          </ul>\n                        ) : null}\n                      </div>\n              </div>\n            ))}\n     \n          {/* New Message form */}\n          {this.props.selectedChatroomId != 0 ? \n          <div>\n            <form onSubmit={(event) => this.createMessage(event)}>\n              <div>\n                <input\n                  onChange={(event) => this.handleOnChange(event)}\n                  placeholder=\"Enter Message\"\n                  id=\"message\"\n                  type=\"message\"\n                ></input>\n              </div>\n              <div className=\"submit-button\">\n                <button\n                  type=\"submit\"\n                  placeholder=\"Submit\"\n                  class=\"bg-blue-700 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                >\n                  Submit\n                </button>\n              </div>\n            </form>\n            </div> : null} \n      </div>\n  </div>\n      \n    );\n  }\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/presentational/Search.jsx",["95"],"import React, { Component } from 'react'\nimport Add from '../images/add-circle-outline (1).svg'\n\nexport default class Search extends Component {\n\n    addServer = (event) => {\n        let url = \"http://localhost:3000/addserver\"\n        let serverId = this.props.result.id\n        let userId = localStorage.getItem(\"userId\")\n\n        let reqObj = {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            body: JSON.stringify({ server_id: serverId, user_id: userId, admin: false }),\n          };\n\n          fetch(url, reqObj)\n          .then(resp => resp.json())\n          .then(memberRelationship => this.props.addServerToState(memberRelationship))\n        //   I tried to use this addServerToState to get the page to refresh when added but it doesnt seem to work \n          \n    }\n\n    \n    render() {\n        // console.log(this.props.result.name);\n        return (\n            <div>\n                <div>\n                {/* <input value={this.props.result.name}/> */}\n                <h1 class=\"text-xl text-white bg-blue-800\">{this.props.result.name}</h1>\n                </div>\n                <div className=\"bg-blue-800 add-button\">\n                <button onClick={(event) => this.addServer(event)} ><img src={Add} className=\"w-10 h-10 mx-auto mb-3 rounded-full\"/></button>\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/erickvilleda/Flatiron/Final/take1Discord/frontend/src/container/Home.jsx",["96"],{"ruleId":"97","severity":1,"message":"98","line":148,"column":15,"nodeType":"99","endLine":151,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":196,"column":19,"nodeType":"99","endLine":196,"endColumn":71},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"111","line":5,"column":26,"nodeType":"108","messageId":"109","endLine":5,"endColumn":30},{"ruleId":"106","severity":1,"message":"112","line":10,"column":9,"nodeType":"108","messageId":"109","endLine":10,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":39,"column":9,"nodeType":"99","endLine":39,"endColumn":76},{"ruleId":"100","severity":1,"message":"101","line":112,"column":17,"nodeType":"99","endLine":112,"endColumn":80},{"ruleId":"97","severity":1,"message":"98","line":117,"column":15,"nodeType":"99","endLine":117,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":118,"column":17,"nodeType":"99","endLine":121,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":170,"column":19,"nodeType":"99","endLine":170,"endColumn":73},{"ruleId":"106","severity":1,"message":"111","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":7},{"ruleId":"106","severity":1,"message":"113","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":11},{"ruleId":"106","severity":1,"message":"114","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"115","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":17},{"ruleId":"106","severity":1,"message":"116","line":13,"column":8,"nodeType":"108","messageId":"109","endLine":13,"endColumn":20},{"ruleId":"106","severity":1,"message":"117","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":3,"column":16,"nodeType":"108","messageId":"109","endLine":3,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":84,"column":17,"nodeType":"99","endLine":87,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":91,"column":17,"nodeType":"99","endLine":94,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":9,"column":17,"nodeType":"99","endLine":9,"endColumn":62},{"ruleId":"102","replacedBy":"118"},{"ruleId":"104","replacedBy":"119"},{"ruleId":"106","severity":1,"message":"120","line":2,"column":5,"nodeType":"108","messageId":"109","endLine":2,"endColumn":15},{"ruleId":"106","severity":1,"message":"113","line":4,"column":5,"nodeType":"108","messageId":"109","endLine":4,"endColumn":13},{"ruleId":"106","severity":1,"message":"114","line":5,"column":5,"nodeType":"108","messageId":"109","endLine":5,"endColumn":19},{"ruleId":"106","severity":1,"message":"115","line":6,"column":5,"nodeType":"108","messageId":"109","endLine":6,"endColumn":19},{"ruleId":"102","replacedBy":"121"},{"ruleId":"104","replacedBy":"122"},{"ruleId":"106","severity":1,"message":"123","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"124","severity":1,"message":"125","line":104,"column":42,"nodeType":"126","messageId":"127","endLine":104,"endColumn":44},{"ruleId":"100","severity":1,"message":"101","line":37,"column":69,"nodeType":"99","endLine":37,"endColumn":133},{"ruleId":"124","severity":1,"message":"125","line":83,"column":68,"nodeType":"126","messageId":"127","endLine":83,"endColumn":70},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FaBeer' is defined but never used.","'atom' is defined but never used.","'history' is assigned a value but never used.","'selector' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilValue' is defined but never used.","'SmallSidebar' is defined but never used.","'Link' is defined but never used.",["128"],["129"],"'RecoilRoot' is defined but never used.",["128"],["129"],"'Logo' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]